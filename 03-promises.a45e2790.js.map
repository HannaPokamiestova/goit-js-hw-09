{"mappings":"AAuBA,SAASA,EAAcC,EAAUC,GAY/B,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAjCAO,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAQF,EAAMG,cAAcb,MAAMc,cACtC,MAAMC,EAAOL,EAAMG,cAAcE,KAAKD,cAChCE,EAASN,EAAMG,cAAcG,OAAOF,cAE1C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,IACzCnB,EAAcmB,EAAUL,GACrBM,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,QAAQC,IAAI,uBAAqBrB,QAAiBC,MAAU,IAE7DqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBmB,QAAQC,IAAI,sBAAoBrB,QAAeC,MAAU,IAG7DY,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(\".form\");\nform.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = event.currentTarget.delay.valueAsNumber;\n  const step = event.currentTarget.step.valueAsNumber;\n  const amount = event.currentTarget.amount.valueAsNumber;\n\n  for (let position = 1; position <= amount; position++) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delay1","currentTarget","valueAsNumber","step","amount","position1","then","console","log","catch"],"version":3,"file":"03-promises.a45e2790.js.map"}